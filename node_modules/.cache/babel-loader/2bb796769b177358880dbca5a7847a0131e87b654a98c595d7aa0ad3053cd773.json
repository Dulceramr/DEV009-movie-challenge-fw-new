{"ast":null,"code":"var _jsxFileName = \"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/SearchMovie.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchMovie = ({\n  setPeliculas,\n  currentPage\n}) => {\n  _s();\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n  const [busqueda, setBusqueda] = useState('');\n  const handleInputChange = e => {\n    setBusqueda(e.target.value);\n  };\n  useEffect(() => {\n    if (busqueda) {\n      const fetchMovies = async () => {\n        try {\n          const response = await fetch(`${BASE_URL}?query=${busqueda}&api_key=${API_KEY}&page=${currentPage}`);\n          const data = await response.json();\n          setPeliculas(data.results);\n        } catch (error) {\n          console.error(\"Error fetching movies\", error);\n        }\n      };\n      fetchMovies();\n    }\n  }, [busqueda, currentPage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by Name\",\n        value: busqueda,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SearchMovie, \"tOdy9oBxAr1jUnBfayI1xi6dmbc=\");\n_c = SearchMovie;\nvar _c;\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchMovie","setPeliculas","currentPage","_s","BASE_URL","API_KEY","busqueda","setBusqueda","handleInputChange","e","target","value","fetchMovies","response","fetch","data","json","results","error","console","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/SearchMovie.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ntype Movie = {\n  id:number;\n  title: string;\n  release_date: string;\n  poster_path: string;\n  overview: string;\n};\n\ntype Props = {\n  setPeliculas: React.Dispatch<React.SetStateAction<Movie[]>>;\n  currentPage: number;\n}\n\nexport const SearchMovie: React.FC<Props> = ({ setPeliculas, currentPage }) => {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n\n  const [busqueda, setBusqueda] = useState<string>('');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setBusqueda(e.target.value);\n  };\n\n  useEffect(() => {\n    if (busqueda) {\n      const fetchMovies = async () => {\n        try {\n          const response = await fetch(`${BASE_URL}?query=${busqueda}&api_key=${API_KEY}&page=${currentPage}`);\n          const data = await response.json();\n          setPeliculas(data.results);\n        } catch (error) {\n          console.error(\"Error fetching movies\", error);\n        }\n      };\n\n      fetchMovies();\n    }\n  }, [busqueda, currentPage]);\n\n  return (\n    <>\n      <form>\n        <input\n          type='text'\n          placeholder='Search by Name'\n          value={busqueda}\n          onChange={handleInputChange}\n        />\n        <button type='submit'>\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAenD,OAAO,MAAMC,WAA4B,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAMC,QAAQ,GAAG,2CAA2C;EAC5D,MAAMC,OAAO,GAAG,kCAAkC;EAElD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAMc,iBAAiB,GAAIC,CAAsC,IAAK;IACpEF,WAAW,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,EAAE;MACZ,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;QAC9B,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,QAAS,UAASE,QAAS,YAAWD,OAAQ,SAAQH,WAAY,EAAC,CAAC;UACpG,MAAMa,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClCf,YAAY,CAACc,IAAI,CAACE,OAAO,CAAC;QAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C;MACF,CAAC;MAEDN,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACN,QAAQ,EAAEJ,WAAW,CAAC,CAAC;EAE3B,oBACEL,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eACEvB,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gBAAgB;QAC5BX,KAAK,EAAEL,QAAS;QAChBiB,QAAQ,EAAEf;MAAkB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACF9B,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAEtB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACP,CAAC;AAEP,CAAC;AAACxB,EAAA,CAzCWH,WAA4B;AAAA4B,EAAA,GAA5B5B,WAA4B;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}