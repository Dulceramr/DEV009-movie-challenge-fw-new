{"ast":null,"code":"var _jsxFileName = \"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/MovieList/MovieList.tsx\";\nimport React from 'react';\nimport './MovieList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieList = ({\n  peliculas\n}) => {\n  //definir componente MovieList, espera recibir props que coincidan con MovieListProps\n\n  // Función para dividir el array en grupos de 5\n  const dividedArray = (array, chunkSize) => {\n    //array de peliculas y cuántos elementos queremos en cada grupo\n    const result = []; // almacenaremos los grupos de películas que se vayan creando.\n    for (let i = 0; i < array.length; i += chunkSize) {\n      result.push(array.slice(i, i + chunkSize));\n    }\n    return result;\n  };\n  const movieRows = dividedArray(peliculas, 5);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"movie-table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: movieRows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.map(movie =>\n        /*#__PURE__*/\n        // para cada pelicula creamos una celda de tabla\n        _jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w200/${movie.poster_path}`,\n              alt: movie.title,\n              className: \"poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"date\",\n              children: movie.release_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MovieList","peliculas","dividedArray","array","chunkSize","result","i","length","push","slice","movieRows","className","children","map","row","rowIndex","movie","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","release_date","id","_c","$RefreshReg$"],"sources":["/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/MovieList/MovieList.tsx"],"sourcesContent":["import React from 'react';\nimport './MovieList.css';\n\ntype Movie = { //type que define estructura de un objeto de película. \n  id: number;\n  title: string;\n  release_date: string;\n  poster_path?: string; \n  overview: string;\n};\n\ntype MovieListProps = { //describe las props que MovieList espera recibir\n  peliculas: Movie[];\n};\n\nexport const MovieList: React.FC<MovieListProps> = ({ peliculas }) => { //definir componente MovieList, espera recibir props que coincidan con MovieListProps\n\n  // Función para dividir el array en grupos de 5\n  const dividedArray = (array: Movie[], chunkSize: number) => { //array de peliculas y cuántos elementos queremos en cada grupo\n    const result = []; // almacenaremos los grupos de películas que se vayan creando.\n    for (let i = 0; i < array.length; i += chunkSize) {\n      result.push(array.slice(i, i + chunkSize));\n    }\n    return result;\n  };\n\n  const movieRows = dividedArray(peliculas, 5);\n\n  return (\n    <table className=\"movie-table\">\n      <tbody>\n        {movieRows.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((movie) => ( // para cada pelicula creamos una celda de tabla\n              <td key={movie.id}>\n                <div className=\"movie-item\">\n                  <img src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} className='poster'/>\n                  <h4 className='title'>{movie.title}</h4>\n                  <p className='date'>{movie.release_date}</p>\n                </div>\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAczB,OAAO,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAE;;EAEtE;EACA,MAAMC,YAAY,GAAGA,CAACC,KAAc,EAAEC,SAAiB,KAAK;IAAE;IAC5D,MAAMC,MAAM,GAAG,EAAE,CAAC,CAAC;IACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,IAAIF,SAAS,EAAE;MAChDC,MAAM,CAACG,IAAI,CAACL,KAAK,CAACM,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAAC,CAAC;IAC5C;IACA,OAAOC,MAAM;EACf,CAAC;EAED,MAAMK,SAAS,GAAGR,YAAY,CAACD,SAAS,EAAE,CAAC,CAAC;EAE5C,oBACEF,OAAA;IAAOY,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC5Bb,OAAA;MAAAa,QAAA,EACGF,SAAS,CAACG,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBAC3BhB,OAAA;QAAAa,QAAA,EACGE,GAAG,CAACD,GAAG,CAAEG,KAAK;QAAA;QAAO;QACpBjB,OAAA;UAAAa,QAAA,eACEb,OAAA;YAAKY,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBb,OAAA;cAAKkB,GAAG,EAAG,mCAAkCD,KAAK,CAACE,WAAY,EAAE;cAACC,GAAG,EAAEH,KAAK,CAACI,KAAM;cAACT,SAAS,EAAC;YAAQ;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,eACxGzB,OAAA;cAAIY,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAEI,KAAK,CAACI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxCzB,OAAA;cAAGY,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAEI,KAAK,CAACS;YAAY;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC;QAAC,GALCR,KAAK,CAACU,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMb,CACL;MAAC,GATKT,QAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACG,EAAA,GAhCW3B,SAAmC;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}