{"ast":null,"code":"var _jsxFileName = \"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/MovieList/MovieList.tsx\";\nimport React from \"react\";\nimport \"./MovieList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MovieList = ({\n  peliculas,\n  onSelectMovie\n}) => {\n  const dividedArray = (array, chunkSize) => {\n    const result = [];\n    for (let i = 0; i < array.length; i += chunkSize) {\n      result.push(array.slice(i, i + chunkSize));\n    }\n    return result;\n  };\n  const movieRows = dividedArray(peliculas, 5);\n  const defaultImage = \"/imagen-palomitas.png\";\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"movie-table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: movieRows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.map(movie => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-item\",\n            onClick: () => {\n              console.log(\"Película seleccionada:\", movie.id);\n              onSelectMovie(movie.id);\n            },\n            children: [movie.poster_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w200/${movie.poster_path}`,\n              alt: movie.title,\n              className: \"poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: defaultImage,\n                alt: \"Default movie poster\",\n                className: \"poster\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-image-text\",\n                children: \"No Image Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"date\",\n              children: movie.release_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","peliculas","onSelectMovie","dividedArray","array","chunkSize","result","i","length","push","slice","movieRows","defaultImage","className","children","map","row","rowIndex","movie","onClick","console","log","id","poster_path","src","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","release_date","_c","$RefreshReg$"],"sources":["/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/MovieList/MovieList.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./MovieList.css\";\n\ntype Movie = {\n  id: number;\n  title: string;\n  release_date: string;\n  poster_path: string;\n  overview: string;\n};\n\ntype MovieListProps = {\n  peliculas: Movie[];\n  onSelectMovie: (movieId: number) => void;\n};\n\nexport const MovieList: React.FC<MovieListProps> = ({ peliculas, onSelectMovie }) => {\n  const dividedArray = (array: Movie[], chunkSize: number) => {\n    const result = [];\n    for (let i = 0; i < array.length; i += chunkSize) {\n      result.push(array.slice(i, i + chunkSize));\n    }\n    return result;\n  };\n\n  const movieRows = dividedArray(peliculas, 5);\n  const defaultImage = \"/imagen-palomitas.png\";\n\n  return (\n    <table className=\"movie-table\">\n      <tbody>\n        {movieRows.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((movie) => (\n              <td key={movie.id}>\n                <div className=\"movie-item\" onClick={() => {\n  console.log(\"Película seleccionada:\", movie.id);\n  onSelectMovie(movie.id);\n}}>\n                  {movie.poster_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n                      alt={movie.title}\n                      className=\"poster\"\n                    />\n                  ) : (\n                    <>\n                      <img\n                        src={defaultImage}\n                        alt=\"Default movie poster\"\n                        className=\"poster\"\n                      />\n                      <div className=\"no-image-text\">No Image Available</div>\n                    </>\n                  )}\n                  <h4 className=\"title\">{movie.title}</h4>\n                  <p className=\"date\">{movie.release_date}</p>\n                </div>\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}