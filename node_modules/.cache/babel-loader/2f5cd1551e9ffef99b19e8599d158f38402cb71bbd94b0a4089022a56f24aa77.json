{"ast":null,"code":"var _jsxFileName = \"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/Pagination/Pagination.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange\n}) => {\n  // Función para generar el rango de páginas a mostrar\n  const generatePageNumbers = () => {\n    const numbers = [];\n    let start = currentPage - 5; // Empezamos 5 páginas antes de la actual\n    let end = currentPage + 4; // Terminamos 4 páginas después de la actual\n\n    // Ajustes para asegurarnos que no nos salimos del rango de páginas disponibles\n    if (start < 1) {\n      end -= start - 1;\n      start = 1;\n    }\n    if (end > totalPages) {\n      start -= end - totalPages;\n      end = totalPages;\n    }\n    for (let i = start; i <= end; i++) {\n      numbers.push(i);\n    }\n    return numbers;\n  };\n  const pageNumbers = generatePageNumbers();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentPage > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPageChange(currentPage - 1),\n      children: \"Anterior\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 27\n    }, this), pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPageChange(number),\n      style: {\n        backgroundColor: number === currentPage ? 'grey' : 'white'\n      },\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)), currentPage < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPageChange(currentPage + 1),\n      children: \"Siguiente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Pagination","currentPage","totalPages","onPageChange","generatePageNumbers","numbers","start","end","i","push","pageNumbers","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","number","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/Pagination/Pagination.tsx"],"sourcesContent":["import React from 'react';\n\nconst Pagination: React.FC<{\n  currentPage: number,\n  totalPages: number,\n  onPageChange: (page: number) => void\n}> = ({ currentPage, totalPages, onPageChange }) => {\n\n  // Función para generar el rango de páginas a mostrar\n  const generatePageNumbers = () => {\n    const numbers = [];\n\n    let start = currentPage - 5; // Empezamos 5 páginas antes de la actual\n    let end = currentPage + 4;   // Terminamos 4 páginas después de la actual\n\n    // Ajustes para asegurarnos que no nos salimos del rango de páginas disponibles\n    if (start < 1) {\n      end -= (start - 1);\n      start = 1;\n    }\n\n    if (end > totalPages) {\n      start -= (end - totalPages);\n      end = totalPages;\n    }\n\n    for (let i = start; i <= end; i++) {\n      numbers.push(i);\n    }\n\n    return numbers;\n  };\n\n  const pageNumbers = generatePageNumbers();\n\n  return (\n    <div>\n      {currentPage > 1 && <button onClick={() => onPageChange(currentPage - 1)}>Anterior</button>}\n      \n      {pageNumbers.map(number => (\n        <button \n          key={number}\n          onClick={() => onPageChange(number)}\n          style={{ backgroundColor: number === currentPage ? 'grey' : 'white' }}>\n          {number}\n        </button>\n      ))}\n\n      {currentPage < totalPages && <button onClick={() => onPageChange(currentPage + 1)}>Siguiente</button>}\n    </div>\n  );\n};\n\nexport default Pagination;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAIJ,GAAGA,CAAC;EAAEC,WAAW;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EAElD;EACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,OAAO,GAAG,EAAE;IAElB,IAAIC,KAAK,GAAGL,WAAW,GAAG,CAAC,CAAC,CAAC;IAC7B,IAAIM,GAAG,GAAGN,WAAW,GAAG,CAAC,CAAC,CAAG;;IAE7B;IACA,IAAIK,KAAK,GAAG,CAAC,EAAE;MACbC,GAAG,IAAKD,KAAK,GAAG,CAAE;MAClBA,KAAK,GAAG,CAAC;IACX;IAEA,IAAIC,GAAG,GAAGL,UAAU,EAAE;MACpBI,KAAK,IAAKC,GAAG,GAAGL,UAAW;MAC3BK,GAAG,GAAGL,UAAU;IAClB;IAEA,KAAK,IAAIM,CAAC,GAAGF,KAAK,EAAEE,CAAC,IAAID,GAAG,EAAEC,CAAC,EAAE,EAAE;MACjCH,OAAO,CAACI,IAAI,CAACD,CAAC,CAAC;IACjB;IAEA,OAAOH,OAAO;EAChB,CAAC;EAED,MAAMK,WAAW,GAAGN,mBAAmB,CAAC,CAAC;EAEzC,oBACEL,OAAA;IAAAY,QAAA,GACGV,WAAW,GAAG,CAAC,iBAAIF,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACF,WAAW,GAAG,CAAC,CAAE;MAAAU,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE1FN,WAAW,CAACO,GAAG,CAACC,MAAM,iBACrBnB,OAAA;MAEEa,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACe,MAAM,CAAE;MACpCC,KAAK,EAAE;QAAEC,eAAe,EAAEF,MAAM,KAAKjB,WAAW,GAAG,MAAM,GAAG;MAAQ,CAAE;MAAAU,QAAA,EACrEO;IAAM,GAHFA,MAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIL,CACT,CAAC,EAEDf,WAAW,GAAGC,UAAU,iBAAIH,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACF,WAAW,GAAG,CAAC,CAAE;MAAAU,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClG,CAAC;AAEV,CAAC;AAACK,EAAA,GAjDIrB,UAIJ;AA+CF,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}