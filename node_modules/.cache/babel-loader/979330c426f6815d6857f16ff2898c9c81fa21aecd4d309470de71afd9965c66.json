{"ast":null,"code":"var _jsxFileName = \"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { MovieList } from './components/MovieList/MovieList';\nimport { MovieDetail } from './components/MovieDetail/MovieDetail';\nimport { OrderByGenre } from './components/OrderBy/OrderByGenre';\nimport SearchMovie from './components/OrderBy/SearchMovie';\nimport SortBy from './components/OrderBy/SortBy';\nimport Pagination from './components/Pagination/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [peliculas, setPeliculas] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [selectedMovieId, setSelectedMovieId] = useState(null);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n  useEffect(() => {\n    if (selectedMovieId) {\n      const fetchMovieDetails = async () => {\n        try {\n          const response = await fetch(`https://api.themoviedb.org/3/movie/${selectedMovieId}?api_key=${API_KEY}`);\n          const movieDetails = await response.json();\n          setSelectedMovie(movieDetails);\n        } catch (error) {\n          console.error(\"Error obteniendo detalles de la película:\", error);\n        }\n      };\n      fetchMovieDetails();\n    }\n  }, [selectedMovieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedMovie ? /*#__PURE__*/_jsxDEV(MovieDetail, {\n      movie: selectedMovie,\n      onReturn: () => setSelectedMovie(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"Movie Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-container\",\n        children: [/*#__PURE__*/_jsxDEV(OrderByGenre, {\n          setPeliculas: setPeliculas,\n          setTotalPages: setTotalPages,\n          currentPage: currentPage,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SortBy, {\n          setPeliculas: setPeliculas,\n          setTotalPages: setTotalPages,\n          currentPage: currentPage,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SearchMovie, {\n          setPeliculas: setPeliculas,\n          setTotalPages: setTotalPages,\n          currentPage: currentPage,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: currentPage,\n        totalPages: totalPages,\n        onPageChange: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        peliculas: peliculas,\n        onSelectMovie: setSelectedMovieId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: currentPage,\n        totalPages: totalPages,\n        onPageChange: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(App, \"seKxlqp60wd6ir95E8bGE8Hmh6w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MovieList","MovieDetail","OrderByGenre","SearchMovie","SortBy","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","peliculas","setPeliculas","currentPage","setCurrentPage","totalPages","setTotalPages","selectedMovieId","setSelectedMovieId","selectedMovie","setSelectedMovie","API_KEY","fetchMovieDetails","response","fetch","movieDetails","json","error","console","children","movie","onReturn","fileName","_jsxFileName","lineNumber","columnNumber","className","onPageChange","onSelectMovie","_c","$RefreshReg$"],"sources":["/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { MovieList } from './components/MovieList/MovieList';\nimport { MovieDetail } from './components/MovieDetail/MovieDetail'; \nimport { OrderByGenre } from './components/OrderBy/OrderByGenre';\nimport SearchMovie from './components/OrderBy/SearchMovie';\nimport SortBy from './components/OrderBy/SortBy';\nimport Pagination from './components/Pagination/Pagination';  \n\ntype Movie = {\n  id: number;\n  title: string;\n  release_date: string;\n  poster_path: string;\n  overview: string;\n};\n\nfunction App() {\n  const [peliculas, setPeliculas] = useState<Movie[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [selectedMovieId, setSelectedMovieId] = useState<number | null>(null);\n  const [selectedMovie, setSelectedMovie] = useState<any | null>(null);\n\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n\n  useEffect(() => {\n    if (selectedMovieId) {\n      const fetchMovieDetails = async () => {\n        try {\n          const response = await fetch(`https://api.themoviedb.org/3/movie/${selectedMovieId}?api_key=${API_KEY}`);\n          const movieDetails = await response.json();\n          setSelectedMovie(movieDetails);\n        } catch (error) {\n          console.error(\"Error obteniendo detalles de la película:\", error);\n        }\n      };\n      fetchMovieDetails();\n    }\n  }, [selectedMovieId]);\n  \n\n  return (\n    <>\n      {selectedMovie ? (\n        <MovieDetail movie={selectedMovie} onReturn={() => setSelectedMovie(null)} />\n      ) : (\n        <>\n          <h1 className='main-title'>Movie Challenge</h1>\n          <div className='select-container'>\n            <OrderByGenre setPeliculas={setPeliculas} setTotalPages={setTotalPages} currentPage={currentPage} setCurrentPage={setCurrentPage}/>\n            <SortBy setPeliculas={setPeliculas} setTotalPages={setTotalPages} currentPage={currentPage} setCurrentPage={setCurrentPage}/>\n            <SearchMovie setPeliculas={setPeliculas} setTotalPages={setTotalPages} currentPage={currentPage} setCurrentPage={setCurrentPage}/>\n          </div>\n          <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={setCurrentPage} />\n          <MovieList peliculas={peliculas} onSelectMovie={setSelectedMovieId} /> \n          <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={setCurrentPage} />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}