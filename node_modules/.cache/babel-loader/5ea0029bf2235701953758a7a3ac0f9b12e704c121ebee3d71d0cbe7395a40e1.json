{"ast":null,"code":"var _jsxFileName = \"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/OrderByGenre.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../../styles/OrderByGenre.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderByGenre = ({\n  setPeliculas\n}) => {\n  _s();\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n  const [genres, setGenres] = useState([]);\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`);\n        const data = await response.json();\n        setGenres(data.genres);\n      } catch (error) {\n        console.error(\"Error fetching genres\", error);\n      }\n    };\n    fetchGenres();\n  }, []);\n  const handleByChange = async event => {\n    const selectedGenre = event.target.value;\n    try {\n      const response = await fetch(`${BASE_URL}/discover/movie?with_genres=${selectedGenre}&api_key=${API_KEY}&page=${currentPage}`);\n      const data = await response.json();\n      setPeliculas(data.results);\n    } catch (error) {\n      console.error(\"Error fetching movies by genre:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"orderByGenre\",\n      children: \"Order by Genre \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"orderByGenre\",\n      onChange: handleByChange,\n      children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: genre.id,\n        children: genre.name\n      }, genre.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderByGenre, \"OACoFRc7CCgkBjNz6yRao2W4P/w=\");\n_c = OrderByGenre;\nvar _c;\n$RefreshReg$(_c, \"OrderByGenre\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","OrderByGenre","setPeliculas","_s","BASE_URL","API_KEY","genres","setGenres","fetchGenres","response","fetch","data","json","error","console","handleByChange","event","selectedGenre","target","value","currentPage","results","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","genre","name","_c","$RefreshReg$"],"sources":["/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/OrderByGenre.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../../styles/OrderByGenre.css';\n\ntype Movie = {\n  id:number;\n  title: string;\n  release_date: string;\n  poster_path: string;\n  overview: string;\n};\n\ntype Genre = {\n  id: number;\n  name: string;\n};\n\ntype Props = {\n  setPeliculas: React.Dispatch<React.SetStateAction<Movie[]>>;\n}\n\nexport const OrderByGenre: React.FC<Props> = ({ setPeliculas }) => {\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n\nconst [genres, setGenres] = useState<Genre[]>([]);\n\nuseEffect(() => {\n  const fetchGenres = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`);\n      const data = await response.json();\n      setGenres(data.genres);\n    } catch (error) {\n      console.error(\"Error fetching genres\", error);\n    }\n  };\n\n  fetchGenres();\n}, []);\n\n  const handleByChange = async (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const selectedGenre = event.target.value;\n\n        try {\n          const response = await fetch(`${BASE_URL}/discover/movie?with_genres=${selectedGenre}&api_key=${API_KEY}&page=${currentPage}`);\n          const data = await response.json();\n          setPeliculas(data.results);\n        } catch (error) {\n          console.error(\"Error fetching movies by genre:\", error);\n        }\n    };\n\n  return (\n    <div className='container'>\n    <label htmlFor='orderByGenre'>Order by Genre </label>\n    <select id='orderByGenre' onChange={handleByChange}>\n      {genres.map((genre: Genre) => (\n        <option key={genre.id} value={genre.id}>\n          {genre.name}\n        </option>\n      ))}\n    </select>\n    </div>\n  );\n};\n "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmBvC,OAAO,MAAMC,YAA6B,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAMC,QAAQ,GAAG,8BAA8B;EAC/C,MAAMC,OAAO,GAAG,kCAAkC;EAEpD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAU,EAAE,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,6BAA4BC,OAAQ,EAAC,CAAC;QAC/E,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,SAAS,CAACI,IAAI,CAACL,MAAM,CAAC;MACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDL,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEJ,MAAMO,cAAc,GAAG,MAAOC,KAA2C,IAAK;IACxE,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAExC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,+BAA8Ba,aAAc,YAAWZ,OAAQ,SAAQe,WAAY,EAAC,CAAC;MAC9H,MAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCV,YAAY,CAACS,IAAI,CAACU,OAAO,CAAC;IAC5B,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC;EAEH,oBACEb,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC1BvB,OAAA;MAAOwB,OAAO,EAAC,cAAc;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACrD5B,OAAA;MAAQ6B,EAAE,EAAC,cAAc;MAACC,QAAQ,EAAEf,cAAe;MAAAQ,QAAA,EAChDjB,MAAM,CAACyB,GAAG,CAAEC,KAAY,iBACvBhC,OAAA;QAAuBmB,KAAK,EAAEa,KAAK,CAACH,EAAG;QAAAN,QAAA,EACpCS,KAAK,CAACC;MAAI,GADAD,KAAK,CAACH,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzB,EAAA,CA5CWF,YAA6B;AAAAiC,EAAA,GAA7BjC,YAA6B;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}