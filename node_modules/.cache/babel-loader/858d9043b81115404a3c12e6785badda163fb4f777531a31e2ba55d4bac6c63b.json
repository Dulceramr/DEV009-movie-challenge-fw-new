{"ast":null,"code":"var _jsxFileName = \"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { MovieList } from './components/MovieList/MovieList';\nimport { OrderByGenre } from './components/OrderBy/OrderByGenre';\nimport { SearchMovie } from './components/OrderBy/SearchMovie';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [peliculas, setPeliculas] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = Math.ceil(peliculas.length / 10);\n  const [mode, setMode] = useState(null);\n  useEffect(() => {\n    if (mode === \"search\") {\n      SearchMovie();\n      // Aquí deberías llamar a la función que hace el fetch de películas basada en la búsqueda.\n      // Por ejemplo, suponiendo que tu función se llama fetchSearchMovies:\n      // fetchSearchMovies();\n    } else if (mode === \"genre\") {\n      OrderByGenre();\n      // Aquí llamarías a la función que hace el fetch de películas basada en el género.\n      // Por ejemplo, suponiendo que tu función se llama fetchGenreMovies:\n      // fetchGenreMovies();\n    }\n  }, [currentPage, mode]); // Observa cambios en currentPage y en mode\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"Movie Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-container\",\n      children: [/*#__PURE__*/_jsxDEV(OrderByGenre, {\n        setPeliculas: setPeliculas,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchMovie, {\n        setPeliculas: setPeliculas,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      peliculas: peliculas.slice((currentPage - 1) * 10, currentPage * 10)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"nAXaQJ6iLQ6wpKX3ogW0AfrB/Dc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MovieList","OrderByGenre","SearchMovie","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","peliculas","setPeliculas","currentPage","setCurrentPage","totalPages","Math","ceil","length","mode","setMode","children","className","fileName","_jsxFileName","lineNumber","columnNumber","slice","_c","$RefreshReg$"],"sources":["/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { MovieList } from './components/MovieList/MovieList'\nimport { OrderByGenre } from './components/OrderBy/OrderByGenre';\nimport { SearchMovie } from './components/OrderBy/SearchMovie';\nimport { Pagination } from './components/Pagination/Pagination';\n\ntype Movie = {\n  id:number;\n  title: string;\n  release_date: string;\n  poster_path: string;\n  overview: string;\n};\n\nfunction App() {\n\n  const [peliculas, setPeliculas] = useState<Movie[]>([]);\n\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const totalPages = Math.ceil(peliculas.length / 10);\n\n  const [mode, setMode] = useState<\"search\" | \"genre\" | null>(null);\n\n   useEffect(() => {\n     if (mode === \"search\") {\n      SearchMovie();\n       // Aquí deberías llamar a la función que hace el fetch de películas basada en la búsqueda.\n       // Por ejemplo, suponiendo que tu función se llama fetchSearchMovies:\n       // fetchSearchMovies();\n     } else if (mode === \"genre\") {\n      OrderByGenre();\n       // Aquí llamarías a la función que hace el fetch de películas basada en el género.\n       // Por ejemplo, suponiendo que tu función se llama fetchGenreMovies:\n       // fetchGenreMovies();\n     }\n   }, [currentPage, mode]);  // Observa cambios en currentPage y en mode\n\n  return (\n    <>\n      <h1 className='main-title'>Movie Challenge</h1>\n      <div className='select-container'>\n        <OrderByGenre setPeliculas={setPeliculas} currentPage={currentPage} />\n        <SearchMovie setPeliculas={setPeliculas} currentPage={currentPage} />\n      </div>\n      <MovieList peliculas={peliculas.slice((currentPage - 1) * 10, currentPage * 10)} />\n      <Pagination \n      totalPages={totalPages}\n      currentPage={currentPage}\n      setCurrentPage={setCurrentPage}/>\n    </>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,kCAAkC;AAC5D,SAASC,YAAY,QAAQ,mCAAmC;AAChE,SAASC,WAAW,QAAQ,kCAAkC;AAC9D,SAASC,UAAU,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAUhE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAU,EAAE,CAAC;EAEvD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAS,CAAC,CAAC;EACzD,MAAMgB,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACN,SAAS,CAACO,MAAM,GAAG,EAAE,CAAC;EAEnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAA4B,IAAI,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACd,IAAImB,IAAI,KAAK,QAAQ,EAAE;MACtBhB,WAAW,CAAC,CAAC;MACZ;MACA;MACA;IACF,CAAC,MAAM,IAAIgB,IAAI,KAAK,OAAO,EAAE;MAC5BjB,YAAY,CAAC,CAAC;MACb;MACA;MACA;IACF;EACF,CAAC,EAAE,CAACW,WAAW,EAAEM,IAAI,CAAC,CAAC,CAAC,CAAE;;EAE3B,oBACEb,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA;MAAIgB,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CpB,OAAA;MAAKgB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC/Bf,OAAA,CAACJ,YAAY;QAACU,YAAY,EAAEA,YAAa;QAACC,WAAW,EAAEA;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtEpB,OAAA,CAACH,WAAW;QAACS,YAAY,EAAEA,YAAa;QAACC,WAAW,EAAEA;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACNpB,OAAA,CAACL,SAAS;MAACU,SAAS,EAAEA,SAAS,CAACgB,KAAK,CAAC,CAACd,WAAW,GAAG,CAAC,IAAI,EAAE,EAAEA,WAAW,GAAG,EAAE;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnFpB,OAAA,CAACF,UAAU;MACXW,UAAU,EAAEA,UAAW;MACvBF,WAAW,EAAEA,WAAY;MACzBC,cAAc,EAAEA;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACjC,CAAC;AAEP;AAAChB,EAAA,CArCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}