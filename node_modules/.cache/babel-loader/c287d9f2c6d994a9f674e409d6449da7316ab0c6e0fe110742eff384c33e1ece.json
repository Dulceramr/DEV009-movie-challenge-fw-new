{"ast":null,"code":"var _jsxFileName = \"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/SearchMovie.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchMovie = ({\n  setPeliculas,\n  setTotalPages,\n  currentPage,\n  setCurrentPage,\n  setLastAction\n}) => {\n  _s();\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n  const [busqueda, setBusqueda] = useState('');\n  const handleInputChange = e => {\n    setBusqueda(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCurrentPage(1);\n    setLastAction(\"SEARCH\");\n    fetchMovies();\n  };\n  useEffect(() => {\n    if (busqueda) {\n      // Sólo hace la llamada si hay una búsqueda establecida\n      fetchMovies();\n    }\n  }, [currentPage]);\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}?query=${busqueda}&api_key=${API_KEY}&page=${currentPage}`);\n      const data = await response.json();\n      setPeliculas(data.results);\n      setTotalPages(data.total_pages); // Establecer el total de páginas aquí\n    } catch (error) {\n      console.error(\"Error fetching movies\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by Name\",\n        value: busqueda,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SearchMovie, \"tOdy9oBxAr1jUnBfayI1xi6dmbc=\");\n_c = SearchMovie;\nvar _c;\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchMovie","setPeliculas","setTotalPages","currentPage","setCurrentPage","setLastAction","_s","BASE_URL","API_KEY","busqueda","setBusqueda","handleInputChange","e","target","value","handleSubmit","preventDefault","fetchMovies","response","fetch","data","json","results","total_pages","error","console","children","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/SearchMovie.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ntype Movie = {\n  id:number;\n  title: string;\n  release_date: string;\n  poster_path: string;\n  overview: string;\n};\nexport const SearchMovie: React.FC<{\n  setPeliculas: React.Dispatch<React.SetStateAction<Movie[]>>,\n  setTotalPages: React.Dispatch<React.SetStateAction<number>>,\n  currentPage: number \n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>\n  setLastAction: React.Dispatch<React.SetStateAction<\"SEARCH\" | \"GENRE\" | \"SORT\" | \"NONE\">>\n}> = ({ setPeliculas, setTotalPages, currentPage, setCurrentPage, setLastAction }) => {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n\n  const [busqueda, setBusqueda] = useState<string>('');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setBusqueda(e.target.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setCurrentPage(1);  \n    setLastAction(\"SEARCH\");\n    fetchMovies();\n  };\n\n\n  useEffect(() => {\n    if (busqueda) {  // Sólo hace la llamada si hay una búsqueda establecida\n      fetchMovies();\n    }\n  }, [currentPage]);\n\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}?query=${busqueda}&api_key=${API_KEY}&page=${currentPage}`);\n      const data = await response.json();\n      setPeliculas(data.results);\n      setTotalPages(data.total_pages);  // Establecer el total de páginas aquí\n    } catch (error) {\n      console.error(\"Error fetching movies\", error);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='Search by Name'\n          value={busqueda}\n          onChange={handleInputChange}\n        />\n        <button type='submit' className='search-button'>\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AASnD,OAAO,MAAMC,WAMX,GAAGA,CAAC;EAAEC,YAAY;EAAEC,aAAa;EAAEC,WAAW;EAAEC,cAAc;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAMC,QAAQ,GAAG,2CAA2C;EAC5D,MAAMC,OAAO,GAAG,kCAAkC;EAElD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAMiB,iBAAiB,GAAIC,CAAsC,IAAK;IACpEF,WAAW,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAmC,IAAK;IAC5DA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBZ,cAAc,CAAC,CAAC,CAAC;IACjBC,aAAa,CAAC,QAAQ,CAAC;IACvBY,WAAW,CAAC,CAAC;EACf,CAAC;EAGDtB,SAAS,CAAC,MAAM;IACd,IAAIc,QAAQ,EAAE;MAAG;MACfQ,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACd,WAAW,CAAC,CAAC;EAEjB,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,QAAS,UAASE,QAAS,YAAWD,OAAQ,SAAQL,WAAY,EAAC,CAAC;MACpG,MAAMiB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCpB,YAAY,CAACmB,IAAI,CAACE,OAAO,CAAC;MAC1BpB,aAAa,CAACkB,IAAI,CAACG,WAAW,CAAC,CAAC,CAAE;IACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACE3B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,eACE7B,OAAA;MAAM8B,QAAQ,EAAEZ,YAAa;MAAAW,QAAA,gBAC3B7B,OAAA;QACE+B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gBAAgB;QAC5Bf,KAAK,EAAEL,QAAS;QAChBqB,QAAQ,EAAEnB;MAAkB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFrC,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAACO,SAAS,EAAC,eAAe;QAAAT,QAAA,EAAC;MAEhD;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACP,CAAC;AAEP,CAAC;AAAC5B,EAAA,CAxDWN,WAMX;AAAAoC,EAAA,GANWpC,WAMX;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}