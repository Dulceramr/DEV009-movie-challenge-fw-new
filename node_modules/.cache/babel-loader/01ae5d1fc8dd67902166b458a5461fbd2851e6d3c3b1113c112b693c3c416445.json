{"ast":null,"code":"var _jsxFileName = \"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/SearchMovie.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchMovie = ({\n  setPeliculas,\n  setTotalPages,\n  currentPage\n}) => {\n  _s();\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const handleSearchChange = event => {\n    const searchValue = event.target.value;\n    setSearchTerm(searchValue);\n  };\n  useEffect(() => {\n    if (searchTerm) {\n      const fetchMoviesBySearch = async () => {\n        try {\n          const response = await fetch(`${BASE_URL}?query=${searchTerm}&api_key=${API_KEY}&page=${currentPage}`);\n          const data = await response.json();\n          setPeliculas(data.results);\n          setTotalPages(data.total_pages);\n        } catch (error) {\n          console.error(\"Error fetching movies by search:\", error);\n        }\n      };\n      fetchMoviesBySearch();\n    }\n  }, [searchTerm, currentPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a movie...\",\n      value: searchTerm,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchMovie, \"Tngw7yRuBicxNU1h+Qu7anZ1xPc=\");\n_c = SearchMovie;\nexport default SearchMovie;\nvar _c;\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SearchMovie","setPeliculas","setTotalPages","currentPage","_s","BASE_URL","API_KEY","searchTerm","setSearchTerm","handleSearchChange","event","searchValue","target","value","fetchMoviesBySearch","response","fetch","data","json","results","total_pages","error","console","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/SearchMovie.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ntype Movie = {\n  id: number;\n  title: string;\n  release_date: string;\n  poster_path: string;\n  overview: string;\n};\n\nconst SearchMovie: React.FC<{\n  setPeliculas: React.Dispatch<React.SetStateAction<Movie[]>>,\n  setTotalPages: React.Dispatch<React.SetStateAction<number>>,\n  currentPage: number \n}> = ({ setPeliculas, setTotalPages, currentPage }) => {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const searchValue = event.target.value;\n    setSearchTerm(searchValue);\n  };\n\n  useEffect(() => {\n    if (searchTerm) {\n      const fetchMoviesBySearch = async () => {\n        try {\n          const response = await fetch(`${BASE_URL}?query=${searchTerm}&api_key=${API_KEY}&page=${currentPage}`);\n          const data = await response.json();\n          setPeliculas(data.results);\n          setTotalPages(data.total_pages);\n        } catch (error) {\n          console.error(\"Error fetching movies by search:\", error);\n        }\n      };\n      fetchMoviesBySearch();\n    }\n  }, [searchTerm, currentPage]);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search for a movie...\"\n        value={searchTerm}\n        onChange={handleSearchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchMovie;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUnD,MAAMC,WAIJ,GAAGA,CAAC;EAAEC,YAAY;EAAEC,aAAa;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAMC,QAAQ,GAAG,2CAA2C;EAC5D,MAAMC,OAAO,GAAG,kCAAkC;EAElD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAExD,MAAMa,kBAAkB,GAAIC,KAA0C,IAAK;IACzE,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACtCL,aAAa,CAACG,WAAW,CAAC;EAC5B,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,IAAIU,UAAU,EAAE;MACd,MAAMO,mBAAmB,GAAG,MAAAA,CAAA,KAAY;QACtC,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,QAAS,UAASE,UAAW,YAAWD,OAAQ,SAAQH,WAAY,EAAC,CAAC;UACtG,MAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClCjB,YAAY,CAACgB,IAAI,CAACE,OAAO,CAAC;UAC1BjB,aAAa,CAACe,IAAI,CAACG,WAAW,CAAC;QACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QAC1D;MACF,CAAC;MACDP,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACP,UAAU,EAAEJ,WAAW,CAAC,CAAC;EAE7B,oBACEJ,OAAA;IAAAwB,QAAA,eACExB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,uBAAuB;MACnCZ,KAAK,EAAEN,UAAW;MAClBmB,QAAQ,EAAEjB;IAAmB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAzCIJ,WAIJ;AAAA+B,EAAA,GAJI/B,WAIJ;AAuCF,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}