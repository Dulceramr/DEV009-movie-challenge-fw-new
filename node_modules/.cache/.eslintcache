[{"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/index.tsx":"1","/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/App.tsx":"2","/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/SearchMovie.tsx":"3","/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/OrderByGenre.tsx":"4","/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/MovieList/MovieList.tsx":"5","/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/SortBy.tsx":"6","/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/Pagination/Pagination.tsx":"7","/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/MovieDetail/MovieDetail.tsx":"8"},{"size":275,"mtime":1697053515494,"results":"9","hashOfConfig":"10"},{"size":2515,"mtime":1698634349114,"results":"11","hashOfConfig":"10"},{"size":1923,"mtime":1698468692905,"results":"12","hashOfConfig":"10"},{"size":2224,"mtime":1698454285984,"results":"13","hashOfConfig":"10"},{"size":1818,"mtime":1698634669662,"results":"14","hashOfConfig":"10"},{"size":1708,"mtime":1698454459679,"results":"15","hashOfConfig":"10"},{"size":1538,"mtime":1698463328296,"results":"16","hashOfConfig":"10"},{"size":609,"mtime":1698534672003,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1d8h8oc",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/index.tsx",[],[],["46"],"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/App.tsx",[],[],"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/SearchMovie.tsx",["47"],[],"import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\nimport \"./SearchMovie.css\"\n\ntype Movie = {\n  id: number;\n  title: string;\n  release_date: string;\n  poster_path: string;\n  overview: string;\n};\n\nconst SearchMovie: React.FC<{\n  setPeliculas: React.Dispatch<React.SetStateAction<Movie[]>>,\n  setTotalPages: React.Dispatch<React.SetStateAction<number>>,\n  currentPage: number \n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>\n}> = ({ setPeliculas, setTotalPages, currentPage, setCurrentPage  }) => {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const searchValue = event.target.value;\n    setSearchTerm(searchValue);\n    setCurrentPage(1); // Reinicia la página a 1\n};\n\n  useEffect(() => {\n    if (searchTerm) {\n      const fetchMoviesBySearch = async () => {\n        try {\n          const response = await fetch(`${BASE_URL}?query=${searchTerm}&api_key=${API_KEY}&page=${currentPage}`);\n          const data = await response.json();\n          setPeliculas(data.results);\n          setTotalPages(data.total_pages);\n        } catch (error) {\n          console.error(\"Error fetching movies by search:\", error);\n        }\n      };\n      fetchMoviesBySearch();\n    }\n  }, [searchTerm, currentPage]);\n\n  return (\n    <div className=\"search-container\">\n      <FontAwesomeIcon icon={faMagnifyingGlass} className=\"search-icon\" />\n      <input\n        type=\"text\"\n        placeholder=\"Search for a movie...\"\n        value={searchTerm}\n        onChange={handleSearchChange}\n        className=\"search-input\"\n      />\n    </div>\n  );\n};\n\nexport default SearchMovie;\n","/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/OrderByGenre.tsx",["48"],[],"import React, { useEffect, useState } from 'react';\n\ntype Movie = {\n  id:number;\n  title: string;\n  release_date: string;\n  poster_path: string;\n  overview: string;\n};\n\ntype Genre = {\n  id: number;\n  name: string;\n};\n\nexport const OrderByGenre: React.FC<{\n  setPeliculas: React.Dispatch<React.SetStateAction<Movie[]>>,\n  setTotalPages: React.Dispatch<React.SetStateAction<number>>,\n  currentPage: number \n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>\n}> = ({ setPeliculas, setTotalPages, currentPage, setCurrentPage  }) => {\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n\n  const [genres, setGenres] = useState<Genre[]>([]);\n  const [selectedGenre, setSelectedGenre] = useState<string>(\"\");\n\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`);\n        const data = await response.json();\n        setGenres(data.genres);\n      } catch (error) {\n        console.error(\"Error fetching genres\", error);\n      }\n    };\n\n    fetchGenres();\n  }, []);\n\n  const handleByChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const genre = event.target.value;\n    setSelectedGenre(genre);\n    setCurrentPage(1); // Reinicia la página a 1\n};\n\n  useEffect(() => {\n    if (selectedGenre) {\n      const fetchMoviesByGenre = async () => {\n        try {\n          const response = await fetch(`${BASE_URL}/discover/movie?with_genres=${selectedGenre}&api_key=${API_KEY}&page=${currentPage}`);\n          const data = await response.json();\n          setPeliculas(data.results);\n          setTotalPages(data.total_pages);\n        } catch (error) {\n          console.error(\"Error fetching movies by genre:\", error);\n        }\n      };\n      fetchMoviesByGenre();\n    }\n  }, [currentPage, selectedGenre]);\n\n  return (\n    <div className='container'>\n      <label htmlFor='orderByGenre'>Order by Genre </label>\n      <select id='orderByGenre' onChange={handleByChange}>\n        {genres.map((genre: Genre) => (\n          <option key={genre.id} value={genre.id}>\n            {genre.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n","/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/MovieList/MovieList.tsx",[],[],"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/OrderBy/SortBy.tsx",["49"],[],"import React, { useState, useEffect } from 'react';\n\ntype Movie = {\n  id:number;\n  title: string;\n  release_date: string;\n  poster_path: string;\n  overview: string;\n};\n\nconst SortBy: React.FC<{\n  setPeliculas: React.Dispatch<React.SetStateAction<Movie[]>>,\n  setTotalPages: React.Dispatch<React.SetStateAction<number>>,\n  currentPage: number \n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>\n}> = ({ setPeliculas, setTotalPages, currentPage, setCurrentPage }) => {\n  const BASE_URL = 'https://api.themoviedb.org/3/discover/movie';\n  const API_KEY = '03d8479e6ac8e870c3ef0fea7b1b15c3';\n\n  const [sortByValue, setSortByValue] = useState<string>(\"popularity.desc\");\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const sortBy = event.target.value;\n    setSortByValue(sortBy);\n    setCurrentPage(1); \n};\n\n  useEffect(() => {\n    const fetchSortedMovies = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}?api_key=${API_KEY}&sort_by=${sortByValue}&page=${currentPage}`);\n        const data = await response.json();\n        setPeliculas(data.results);\n        setTotalPages(data.total_pages);\n      } catch (error) {\n        console.error(\"Error fetching sorted movies:\", error);\n      }\n    };\n    fetchSortedMovies();\n  }, [sortByValue, currentPage]);\n\n  return (\n    <div>\n      <label htmlFor=\"sortBy\">Sort by: </label>\n      <select id=\"sortBy\" onChange={handleChange}>\n        <option value=\"popularity.desc\">Popularity Descending</option>\n        <option value=\"original_title.asc\">Title Ascending</option>\n        <option value=\"vote_average.desc\">Rating Descending</option>\n      </select>\n    </div>\n  );\n};\n\nexport default SortBy;\n","/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/Pagination/Pagination.tsx",[],[],"/Users/dulceramirez/Documents/Laboratoria/MovieChallenge/DEV009-movie-challenge-fw-new/src/components/MovieDetail/MovieDetail.tsx",[],[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":45,"column":6,"nodeType":"54","endLine":45,"endColumn":31,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"53","line":62,"column":6,"nodeType":"54","endLine":62,"endColumn":34,"suggestions":"56"},{"ruleId":"52","severity":1,"message":"53","line":40,"column":6,"nodeType":"54","endLine":40,"endColumn":32,"suggestions":"57"},"no-new-object",["58"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setPeliculas' and 'setTotalPages'. Either include them or remove the dependency array. If 'setPeliculas' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["59"],["60"],["61"],"no-object-constructor",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Update the dependencies array to be: [searchTerm, currentPage, setPeliculas, setTotalPages]",{"range":"68","text":"69"},"Update the dependencies array to be: [currentPage, selectedGenre, setPeliculas, setTotalPages]",{"range":"70","text":"71"},"Update the dependencies array to be: [sortByValue, currentPage, setPeliculas, setTotalPages]",{"range":"72","text":"73"},[1536,1561],"[searchTerm, currentPage, setPeliculas, setTotalPages]",[1846,1874],"[currentPage, selectedGenre, setPeliculas, setTotalPages]",[1291,1317],"[sortByValue, currentPage, setPeliculas, setTotalPages]"]